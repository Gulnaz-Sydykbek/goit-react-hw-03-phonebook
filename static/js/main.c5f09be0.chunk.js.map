{"version":3,"sources":["components/container/Container.module.css","components/phonebook/Contacts.module.css","components/container/Container.js","components/phonebook/ContactList.js","components/phonebook/ContactForm.js","components/phonebook/Filter.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactList","props","contacts","onDeleteContact","item","map","id","name","number","type","onClick","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onAddNewContact","this","label","input","form","button","buttonActive","length","onSubmit","pattern","title","required","onChange","placeholder","disabled","Component","Filter","onChangeFilter","App","filter","addNewContact","contact","shortId","generate","addSameName","includes","addSameNumber","alert","prevState","deleteContact","contactId","changeFilter","target","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevContacts","nextContacts","setItem","stringify","normolizedFilter","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,OAAS,yBAAyB,KAAO,yB,sKCK1IC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCgCxBI,MA/Bf,SAAqBC,GACnB,IAAQC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,gBACVC,EAASN,IAATM,KAER,OACE,6BACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIX,UAAWO,EAAf,UACE,iCACGG,EADH,KACWC,KAEX,wBAAQC,KAAK,SAASC,QAAS,kBAAMP,EAAgBG,IAArD,sBAJwBA,S,QCgEnBK,E,4MAjEbC,MAAQ,CACNL,KAAM,GACNC,OAAQ,I,EAGVK,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGV,EAAOS,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,MAAyB,EAAKP,MAAtBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKP,MAAMmB,gBAAgBb,EAAMC,GAEjC,EAAKS,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBa,KAAKT,MAAtBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNc,EAA+BxB,IAA/BwB,MAAOC,EAAwBzB,IAAxByB,MAAOC,EAAiB1B,IAAjB0B,KAAMC,EAAW3B,IAAX2B,OACtBC,EAAenB,EAAKoB,OAAS,GAAKnB,EAAOmB,OAAS,EAExD,OACE,uBAAM9B,UAAW2B,EAAMI,SAAUP,KAAKH,aAAtC,UACE,wBAAOrB,UAAWyB,EAAlB,iBAEE,uBACEzB,UAAW0B,EACXd,KAAK,OACLF,KAAK,OACLsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOT,EACPyB,SAAUX,KAAKR,aACfoB,YAAY,SAGhB,wBAAOpC,UAAWyB,EAAlB,mBAEE,uBACEzB,UAAW0B,EACXd,KAAK,OACLF,KAAK,SACLsB,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRf,MAAOR,EACPwB,SAAUX,KAAKR,aACfoB,YAAY,SAGhB,wBAAQpC,UAAW4B,EAAQhB,KAAK,SAASyB,UAAWR,EAApD,gC,GA/DkBS,aCuBXC,MAvBf,SAAgBnC,GACd,IAAQe,EAA0Bf,EAA1Be,MAAOqB,EAAmBpC,EAAnBoC,eACPf,EAAiBxB,IAAjBwB,MAAOC,EAAUzB,IAAVyB,MAEf,OACE,wBAAO1B,UAAWyB,EAAlB,oCAEE,uBACEzB,UAAW0B,EACXd,KAAK,OACLO,MAAOA,EACPgB,SAAUK,EACVJ,YAAY,UCiFLK,E,4MAzFb1B,MAAQ,CACNV,SAAU,GACVqC,OAAQ,I,EAuBVC,cAAgB,SAACjC,EAAMC,GACrB,IAAQN,EAAa,EAAKU,MAAlBV,SAEFuC,EAAU,CACdnC,GAAIoC,IAAQC,WACZpC,OACAC,UAGIoC,EAAc1C,EAASG,KAAI,SAAAoC,GAAO,OAAIA,EAAQlC,QAAMsC,SAAStC,GAC7DuC,EAAgB5C,EACnBG,KAAI,SAAAoC,GAAO,OAAIA,EAAQjC,UACvBqC,SAASrC,GAERoC,EACFG,MAAM,GAAD,OAAIxC,EAAJ,4BACIuC,EACTC,MAAM,GAAD,OAAIvC,EAAJ,4BAEL,EAAKS,UAAS,SAAA+B,GAAS,MAAK,CAC1B9C,SAAS,CAAEuC,GAAH,mBAAeO,EAAU9C,gB,EAKvC+C,cAAgB,SAAAC,GACd,EAAKjC,UAAS,SAAA+B,GAAS,MAAK,CAC1B9C,SAAU8C,EAAU9C,SAASqC,QAAO,SAAAE,GAAO,OAAIA,EAAQnC,KAAO4C,U,EAIlEC,aAAe,SAAArC,GACb,IAAMsC,EAAStC,EAAEC,cAEjB,EAAKE,SAAS,CACZsB,OAAQa,EAAOpC,S,uDAvDnB,WACE,IAAMd,EAAWmD,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMvD,GAE9BqD,GACFlC,KAAKJ,SAAS,CACZf,SAAUqD,M,gCAKhB,SAAmBG,EAAWV,GAC5B,IAAMW,EAAeX,EAAU9C,SACzB0D,EAAevC,KAAKT,MAAMV,SAE5B0D,IAAiBD,GACnBN,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUF,M,oBA2CpD,WACE,IAAQ5C,EAAUK,KAAKT,MAAfI,MAEF+C,EAAmB1C,KAAKT,MAAM2B,OAAOyB,cAErCC,EAAkB5C,KAAKT,MAAMV,SAASqC,QAAO,SAAAE,GAAO,OACxDA,EAAQlC,KAAKyD,cAAcnB,SAASkB,MAGtC,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAa3C,gBAAiBC,KAAKmB,gBAEnC,0CACA,cAAC,EAAD,CAAQxB,MAAOA,EAAOqB,eAAgBhB,KAAK8B,eAC3C,cAAC,EAAD,CACEjD,SAAU+D,EACV9D,gBAAiBkB,KAAK4B,uB,GAnFdd,aCDlB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c5f09be0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__jFofj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__g3_vj\",\"label\":\"Contacts_label___JJ47\",\"input\":\"Contacts_input__1_Uc9\",\"button\":\"Contacts_button__1Fyw5\",\"item\":\"Contacts_item__1AZLC\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction ContactList(props) {\n  const { contacts, onDeleteContact } = props;\n  const { item } = s;\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={item} key={id}>\n          <span>\n            {name}: {number}\n          </span>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    this.props.onAddNewContact(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { label, input, form, button } = s;\n    const buttonActive = name.length > 0 && number.length > 0;\n\n    return (\n      <form className={form} onSubmit={this.handleSubmit}>\n        <label className={label}>\n          Name\n          <input\n            className={input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\" \"\n          />\n        </label>\n        <label className={label}>\n          Number\n          <input\n            className={input}\n            type=\"text\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\" \"\n          />\n        </label>\n        <button className={button} type=\"submit\" disabled={!buttonActive}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Filter(props) {\n  const { value, onChangeFilter } = props;\n  const { label, input } = s;\n\n  return (\n    <label className={label}>\n      Filter contacts by name\n      <input\n        className={input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\" \"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortId from 'shortid';\nimport Container from './container/Container';\nimport ContactList from './phonebook/ContactList';\nimport ContactForm from './phonebook/ContactForm';\nimport Filter from './phonebook/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const contact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n\n    const addSameName = contacts.map(contact => contact.name).includes(name);\n    const addSameNumber = contacts\n      .map(contact => contact.number)\n      .includes(number);\n\n    if (addSameName) {\n      alert(`${name} is already in contacts`);\n    } else if (addSameNumber) {\n      alert(`${number} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    const target = e.currentTarget;\n\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    const normolizedFilter = this.state.filter.toLowerCase();\n\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFilter),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onAddNewContact={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={value} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}